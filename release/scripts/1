#!/bin/bash
#

echo ""
echo "Release version:"
echo "i.e. 6.2.0.CR3"
read releaseV
echo ""
echo "the release will be: " $releaseV 
echo ""
echo -n "Is this ok? (Hit control-c if is not): "
read ok

TARGET=kiereleaseuser@hp-dl380pg8-01.lab.eng.brq.redhat.com
FAILED=failedUnitTests
RELEASE_FAILED_DIR=$HOME/Release
KIE_ARTIFACTS_FAILED_DIR=/var/kie-artifacts/releaseV
WORKING_DIR=$HOME/droolsjbpm

# identify the failed Unit Tests
DATE_DIR=$(date +"%d.%m.%Y-%H.%M")

RELEASE_DIR=$RELEASE_FAILED_DIR/$releaseV/$FAILED
KIE_DIR=$KIE_ARTIFACTS_FAILED_DIR/$FAILED

# create local directories in Releases and kie-artifacts
# local Release drectory
if [ -d "$RELEASE_DIR" ]; then
   rm -rf $RELEASE_DIR
fi
mkdir $RELEASE_DIR
# local kie-artifacts directory
if [ -d "$KIE_DIR" ]; then
   rm -rf $KIE_DIR
fi
mkdir $KIE_DIR
mkdir $KIE_DIR/$DATE_DIR

# scan for failed Unit Tests
cd $WORKING_DIR
rm full_URL.txt
rm URL.txt

grep -F "Please refer to" $WORKING_DIR/testResult.txt  >> full_URL.txt

FILE_TO_READ=$WORKING_DIR/full_URL.txt
while read line; do
  if [ -n "$line" ]; then
     echo "$line" | cut -f4 -d ' ' >> URL.txt
  fi
done < $FILE_TO_READ


FILE_TO_READ=$WORKING_DIR/URL.txt

while read line; do
  if [ -n "$line" ]; then
     cp $(find $line  -name "*.txt" -exec grep -L "Failures: 0, Errors: 0" {} \;) $RELEASE_DIR
  fi
done < $FILE_TO_READ


# copy local failedUnitTests directories: local and to TARGET server

scp $RELEASE_DIR/* $KIE_DIR/$DATE_DIR
